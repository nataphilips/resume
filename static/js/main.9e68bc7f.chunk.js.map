{"version":3,"sources":["styleguide/colors.js","styleguide/dimensions.js","styleguide/typography.js","styleguide/media.js","styleguide/index.js","components/Header.js","components/Profiles.js","utils/dates.js","components/Education.js","components/WorkExperience.js","components/CareerOverview.js","App.js","styleguide/global.js","serviceWorker.js","index.js"],"names":["white","platinum","metalGray","black","usafaBlue","carrotOrange","darkCyan","chineseViolet","moonstoneBlue","claret","winterGreen","gunmetal","purpleNavy","ceil","amazonite","operaMauve","oldBurgundy","xl","lg","md","sm","xs","maxWidth","regular","colors","jumbo","header","dimensions","label","small","sizes","queries","large","typography","media","css","className","Avatar","photo","resume","basics","picture","Name","name","Headline","Location","location","city","region","summary","Header","styled","styles","div","props","Container","profiles","map","x","Profile","href","url","target","Icon","src","icon","color","iconColor","Network","username","a","img","year","date","slice","education","EducationItem","studyType","area","Instituition","institution","startDate","endDate","work","sort","b","Experience","Title","Position","position","website","Company","company","CompanyText","via","When","duration","Summary","Highlights","highlights","h","Technologies","TechLabel","TechStack","technologies","span","ExperienceSection","size","ProfileContainer","Body","Main","RightSidebar","createGlobalStyle","Boolean","window","hostname","match","ReactDOM","render","Fragment","Education","Profiles","WorkExperience","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e68bc7f.chunk.js","sourcesContent":["export default {\n  // grayscale\n  white: \"#ffffff\",\n  platinum: \"#e5e5e5\",\n  metalGray: \"#5E747F\",\n  black: \"#000000\",\n\n  // colors and accents\n  usafaBlue: \"#686868\",\n  carrotOrange: \"#F09B1A\",\n  darkCyan: \"#008895\",\n  chineseViolet: \"#73628A\", // headers\n  moonstoneBlue: \"#6CA6C1\",\n  claret: \"#611C35\", // headers\n  winterGreen: \"#598381\", // headers\n  gunmetal: \"#2F5652\",\n  purpleNavy: \"#5F5980\",\n  ceil: \"#9191E9\",\n  amazonite: \"#00BFB2\",\n  operaMauve: \"#BC8DA7\",\n  oldBurgundy: \"#442F38\"\n};\n","export default {\n  xl: '80px',\n  lg: '40px',\n  md: '20px',\n  sm: '10px',\n  xs: '5px',\n\n  maxWidth: '1024px',\n}\n","import colors from './colors'\nimport dimensions from './dimensions'\n\nconst regular = `\n  font-family: 'Montserrat', sans-serif;\n  font-size: 16px;\n  line-height: 20px;\n  color: ${colors.black};\n`\nexport default {\n  jumbo: regular + `\n    font-size: 36px;\n    line-height: 60px;\n    font-weight: 700;\n    color: ${colors.usafaBlue};\n  `,\n\n  header: regular + `\n    font-size: 22px;\n    line-height: 24px;\n    font-weight: 600;\n    color: ${colors.usafaBlue};\n    text-transform: uppercase;\n    padding-bottom: ${dimensions.sm};\n    margin-bottom: ${dimensions.sm};\n  `,\n\n  regular,\n\n  label: regular + `\n    font-size: 14px;\n    opacity: .8;\n    line-height: 18px;\n    font-weight: 400;\n    color: ${colors.metalGray};\n  `,\n\n  small: regular + `\n    font-size: 14px;\n    line-height: 18px;\n    margin: 5px 0px;\n    font-weight: 400;\n  `,\n}\n","import { css } from 'styled-components'\n\nconst sizes = {\n  small: 1023,\n}\n\nconst queries = {\n  small: `(max-width: ${sizes.small}px)`,\n  large: `(min-width: ${sizes.small + 1}px)`,\n}\n\n// Iterate through the sizes and create a media template\nconst media = {\n  small: (...args) => css`\n    @media ${queries.small} {\n      ${css(...args)}\n    }\n  `,\n  large: (...args) => css`\n    @media ${queries.large} {\n      ${css(...args)}\n    }\n  `,\n}\n\nexport default media\n","import colors from './colors'\nimport dimensions from './dimensions'\nimport typography from './typography'\nimport media from './media'\n\nexport default {\n  colors,\n  typography,\n  dimensions,\n  media,\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport styles from '../styleguide'\nimport resume from '../resume.json'\n\nexport default () => {\n  return (\n    <Header className=\"profile-bio\">\n      <div>\n        <Avatar photo={resume.basics.picture} />\n      </div>\n\n      <div>\n        <Name className=\"name\">{resume.basics.name}</Name>\n        <Headline className=\"headline\">{resume.basics.label}</Headline>\n        <Location className=\"location\">{resume.basics.location.city}, {resume.basics.location.region}</Location>\n        <div className=\"summary\">{resume.basics.summary}</div>\n      </div>\n    </Header>\n  )\n}\n\nconst Header = styled.header`\n  display: flex;\n  padding-bottom: ${styles.dimensions.lg};\n  border-bottom: 1px solid ${styles.colors.platinum};\n  margin-bottom: ${styles.dimensions.lg};\n\n  ${styles.media.small`\n    flex-direction: column;\n    align-items: center;\n    text-align: left;\n  `}\n`\nconst Avatar = styled.div`\n  background-image: url(${props => props.photo});\n  background-size: cover;\n  background-position: center;\n  height: 200px;\n  width: 200px;\n  margin-right: ${styles.dimensions.md};\n  border-radius: 5px;\n\n  ${styles.media.small`\n    margin-bottom: ${styles.dimensions.md};\n  `}\n`\nconst Name = styled.div`\n  ${styles.typography.jumbo};\n`\nconst Location = styled.div`\n  ${styles.typography.label};\n  margin-bottom: ${styles.dimensions.md};\n`\nconst Headline = styled.div`\n  ${styles.typography.label};\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport styles from '../styleguide'\nimport resume from '../resume.json'\n\nexport default () => {\n  return (\n    <Container className=\"profile-links\">\n      <Header>Find me Online</Header>\n\n      {resume.basics.profiles.map(x => {\n        return (\n          <Profile href={x.url} target=\"_blank\">\n            <Icon src={x.icon} color={x.iconColor} />\n            <Network>{x.username}</Network>\n          </Profile>\n        )\n      })}\n    </Container>\n  )\n}\n\nconst Container = styled.header`\n  display: flex;\n  flex-direction: column;\n  margin: 0 {styles.dimensions.md};\n`\nconst Header = styled.div`\n  ${styles.typography.header};\n`\nconst Profile = styled.a`\n  display: flex;\n  align-items: center;\n  text-decoration: none;\n  ${styles.typography.regular};\n\n  &:visited {\n    ${styles.typography.regular};\n  }\n`\nconst Icon = styled.img`\n  height: 20px;\n  width: 20px;\n  margin: ${styles.dimensions.xs} ${styles.dimensions.sm} ${styles.dimensions.xs} 0;\n`\nconst Network = styled.div`\n  ${styles.typography.small};\n`\n","export const year = (date) => date.slice(0, 4)\n","import React from 'react'\nimport styled from 'styled-components'\nimport styles from '../styleguide'\nimport resume from '../resume.json'\nimport { year } from '../utils/dates'\n\nexport default () => {\n  return (\n    <Container className=\"education-container\">\n      <Header>Education</Header>\n\n      {resume.education.map(x => {\n        return (\n          <EducationItem>\n            <div className=\"education-degree\">\n              {x.studyType} in {x.area}\n            </div>\n\n            <Instituition className=\"education-institution\">\n              @ {x.institution} ({year(x.startDate)} - {year(x.endDate)})\n            </Instituition>\n          </EducationItem>\n        )\n      })}\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  margin-bottom: ${styles.dimensions.lg};\n`\nconst Header = styled.div`\n  ${styles.typography.header};\n`\nconst EducationItem = styled.div`\n  margin-bottom: ${styles.dimensions.md};\n`\nconst Instituition = styled.div`\n  ${styles.typography.label};\n  margin-top: ${styles.dimensions.xs};\n`\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport styles from \"../styleguide\";\nimport resume from \"../resume.json\";\nimport { year } from \"../utils/dates\";\n\nconst work = () => resume.work.sort((a, b) => (a.endDate > b.endDate ? -1 : 1));\n\nexport default () => {\n  return (\n    <Container className=\"work-container\">\n      <Header>Work Experience</Header>\n\n      {work().map(x => {\n        return (\n          <Experience>\n            <Title>\n              <Position className=\"work-position\">{x.position}</Position>\n              {x.website ? (\n                <Company\n                  href={x.website}\n                  target=\"_blank\"\n                  className=\"work-company\"\n                >\n                  @ {x.company}\n                </Company>\n              ) : (\n                <CompanyText className=\"work-company-text\">\n                  @ {x.company}\n                </CompanyText>\n              )}\n              {x.via && <span> (via {x.via})</span>}\n              <When>\n                {year(x.startDate)} - {year(x.endDate)} ({x.duration})\n              </When>\n            </Title>\n\n            <Summary>{x.summary}</Summary>\n\n            <Highlights>\n              {x.highlights &&\n                x.highlights.map(h => {\n                  return <div>- {h}</div>;\n                })}\n            </Highlights>\n            <Technologies>\n              <TechLabel>Technologies: </TechLabel>\n              <TechStack>{x.technologies}</TechStack>\n            </Technologies>\n          </Experience>\n        );\n      })}\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  margin-top: ${styles.dimensions.lg};\n\n  ${styles.media.large`\n    margin-right: ${styles.dimensions.lg};\n  `}\n`;\nconst Header = styled.div`\n  ${styles.typography.header};\n`;\nconst Experience = styled.div`\n  padding: ${styles.dimensions.md};\n  border: 1px solid ${styles.colors.platinum};\n  margin-bottom: ${styles.dimensions.md};\n  position: relative;\n`;\nconst Title = styled.div`\n  ${styles.media.small`\n    display: flex;\n    flex-direction: column;\n  `}\n`;\nconst Position = styled.span`\n  font-weight: 700;\n`;\nconst Company = styled.a`\n  ${styles.media.large`\n    margin-left: ${styles.dimensions.xs};\n  `}\n`;\nconst CompanyText = styled.span`\n  ${styles.media.large`\n    margin-left: ${styles.dimensions.xs};\n  `}\n`;\nconst ExperienceSection = styled.div`\n  margin-left: ${styles.dimensions.sm};\n  margin-bottom: ${styles.dimensions.sm};\n  ${styles.typography.label};\n`;\nconst Summary = styled(ExperienceSection)`\n  margin-top: ${styles.dimensions.sm};\n  text-align: justify;\n`;\nconst Highlights = styled(ExperienceSection)``;\nconst Technologies = styled(ExperienceSection)`\n  margin-bottom: 0;\n`;\nconst TechLabel = styled.span`\n  color: ${styles.colors.metalGray};\n  font-weight: 500;\n`;\nconst When = styled.span`\n  color: ${styles.colors.operaMauve};\n  font-weight: 500;\n\n  ${styles.media.large`\n    position: absolute;\n    right: ${styles.dimensions.md};\n  `}\n`;\nconst TechStack = styled.span``;\n","import React from 'react'\nimport styled from 'styled-components'\nimport styles from '../styleguide'\nimport resume from '../resume.json'\n\nexport default () => {\n  return (\n    <Container className=\"career-container\">\n      <Header>Career Overview</Header>\n\n      {resume.career.reverse().map(x => {\n        return (\n          <CareerItem size={x.size}>\n            <Bullet />\n            <CareerDate>{x.date}</CareerDate>\n            <CareerDescription>{x.description}</CareerDescription>\n          </CareerItem>\n        )\n      })}\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex: 2;\n  flex-direction: column;\n\n  ${styles.media.small`\n    margin-bottom: ${styles.dimensions.lg};\n  `}\n\n  ${styles.media.large`\n    margin-right: ${styles.dimensions.lg};\n  `}\n`\nconst Header = styled.div`\n  ${styles.typography.header};\n`\nconst CareerItem = styled.div`\n  padding: ${styles.dimensions.md};\n  border-left: 10px solid ${styles.colors.platinum};\n  display: flex;\n  position: relative;\n  flex: ${props => props.size};\n`\nconst Bullet = styled.div`\n  background-color: white;\n  width: 16px;\n  height: 16px;\n  position: absolute;\n  left: -18px;\n  top: 17px;\n  border: 5px solid ${styles.colors.usafaBlue};\n  border-radius: 50%;\n`\nconst CareerDate = styled.div`\n  flex: 2;\n  font-weight: 700;\n  margin-right: ${styles.dimensions.md};\n`\nconst CareerDescription = styled.div`\n  flex: 7;\n`\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport styles from \"./styleguide\";\nimport Header from \"./components/Header\";\nimport Profiles from \"./components/Profiles\";\nimport Education from \"./components/Education\";\nimport WorkExperience from \"./components/WorkExperience\";\nimport CareerOverview from \"./components/CareerOverview\";\n\nexport default () => {\n  return (\n    <Profile className=\"profile\">\n      <ProfileContainer className=\"profile-container\">\n        <Header />\n        <Body className=\"body\">\n          <Main className=\"career-and-profile-links\">\n            <RightSidebar className=\"right-sidebar\">\n              <Education />\n              <Profiles />\n            </RightSidebar>\n          </Main>\n\n          <WorkExperience />\n        </Body>\n      </ProfileContainer>\n    </Profile>\n  );\n};\n\nconst Profile = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n`;\nconst ProfileContainer = styled.div`\n  width: ${styles.dimensions.maxWidth};\n  padding: ${styles.dimensions.lg} ${styles.dimensions.md};\n  display: flex;\n  flex-direction: column;\n\n  ${styles.media.small`\n    width: 100%;\n    box-sizing: border-box;\n  `}\n`;\nconst Body = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nconst Main = styled.div`\n  display: flex;\n\n  ${styles.media.small`\n    flex-direction: column;\n  `}\n`;\nconst RightSidebar = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n`;\n","import { createGlobalStyle } from 'styled-components'\nimport typography from './typography'\n\nexport default createGlobalStyle`\n  body {\n    margin: 0;\n    ${typography.regular};\n  }\n\n  a {\n    text-decoration: none;\n\n    ${typography.regular};\n\n    &:visited {\n      ${typography.regular};\n    }\n\n    &:hover {\n      opacity: 0.7;\n    }\n  }\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport GlobalStyles from './styleguide/global'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.Fragment>\n    <GlobalStyles />\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}